#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 1126 0 28 3 10 #"#lang eopl"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;<BSAT>      ::= <expresion>"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;                <bsat-program (exp)>"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;<expresion>       ::= <numero>"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;                      <numero-exp (datum)>"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                  ::= x16 ( {<numero>}* )"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      <numerohex-exp (lsnum)>"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                  ::= 'identificador'"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;                      <caracter-exp (caracter)>"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                  ::= \"identificador\""
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                      <cadena-exp (cadena)>"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;                  ::= <bool>"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;                  ::= <bool-exp (bool)>"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                  ::= <identificador>"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                      <identificador-exp (id)>"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;                  ::= $<identificador>"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;                      <refid-exp (id)>                  "
0 0 24 29 1 #"\n"
0 0 17 3 78
(4
 #";;                  ::= var {<identificador> = <expresion>}+(,) in <"
 #"expresion>"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";;                      <var-exp (ids exps cuerpo)>"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;                  ::= <identificador> -> <expresion>"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;                      <set-exp (id exp)>"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;                  ::= cons {<identificador> = <expresion>}+(,)"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;                      <cons-exp (ids exps cuerpo)> in <expresion>"
0 0 24 29 1 #"\n"
0 0 17 3 100
(5
 #";;                  ::= rec  {<identificador> ({<identificador>}*(,)"
 #") = <expresion>}* in <expresion>"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";;                      <rec-exp (lproc ids cuerpos cuerporec)>"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;                  ::= <lista>"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                      <lista-exp (lista)>"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;                  ::= <vector>"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                      <vector-exp (vector)>"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;                  ::= <registro>"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;                      <registro-exp (registro)>"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;                  ::= <exp-bool>"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                  ::= <bool-exp (exp-bool)>"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;                  ::= begin {<expresion>}+(;) end"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                      <begin-exp (lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 79
(6
 #";;                  ::= if <expr-bool> then <expresion> [else <expre"
 #"sion> ] end"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";;                      <if-exp (expb exp1 exp2)>"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;                  ::= while <expr-bool> do <expresion> done"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;                      <while-exp (expb exp)>"
0 0 24 29 1 #"\n"
0 0 17 3 103
(7
 #";;                  ::= for <identificador> = <expresion> (to | down"
 #"to) <expresion> do <expresion> done"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";;                      <for-exp (id exp1 exp2 exp3)>"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;                  ::= <primitiva> ({<expresion>}*(,))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;                      <prim-exp (lexp)>"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;                  ::= proc({<identificador>}*(,)) <expresion>"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                      <proc-exp (ids body)>"
0 0 24 29 1 #"\n"
0 0 17 3 103
(8
 #";;                  ::= letrec  {<identificador> ({<identificador>}*"
 #"(,)) = <expresion>}* in <expresion>"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(9
 #";;                      <letrec-exp proc-names idss bodies bodyletre"
 #"c>"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";;                  ::= imprimir (<expresion>)"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;                      <print-exp>"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;                  ::= FNC <numero> (<clausula-or>)+(\"and\")"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                      <fnc-exp (numero lc-or)>"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;<clausula-or>     ::= (<numero>)+(\"or\")"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;<primitiva>       ::= + | - | * | % | / | add1 | sub1 | solveFNC"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;                  ::= +_16 | -_16 | *_16 | add1_16 | sub1_16"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                  ::= lenght | concat"
0 0 24 29 1 #"\n"
0 0 17 3 77
(10
 #";;                  ::= vacia | crear-lista | lista? | cabeza | cola"
 #" | append"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";;                  ::= vector? | crear-vec | ref-vec | set-vec"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;                  ::= registros? | crear-reg | ref-reg | set-reg"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;<lista>           ::= [{<expresion>}*(;)]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                      <lista (lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;<vector>          ::= vector[{<expresion>}*(;)]"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;                      <vector (lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;<registro>        ::= {{<identificador> = <expresion>}+(;)}"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      <registro (lids lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;<expr-bool>       ::= <pred-prim> (<expresion> , <expresion>)"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;                      <comparacion (pprim exp1 exp2)>"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;                  ::= <oper-bin-bool> (<expr-bool> , <expr-bool>)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;                      <union (obbool expb expb)>"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;                  ::= <bool>"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;                      <v"
0 0 17 3 15 #"lr-bool (bool)>"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;                  ::= <oper-un-bool> (<expr-bool>)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      <op-comp (oubool expb)>"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;<pred-prim>       ::= <|>|<=|>=|==|<>"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;<oper-bin-bool>   ::= and|or"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;<oper-un-bool>    ::= not"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;<bool>            ::= true"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;                  ::= false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"lexico"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"espacioblanco"
0 0 24 3 2 #" ("
0 0 14 3 10 #"whitespace"
0 0 24 3 2 #") "
0 0 14 3 4 #"skip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"comentario"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"#\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 9 #"#\\newline"
0 0 24 3 3 #")) "
0 0 14 3 4 #"skip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"identificador"
0 0 24 3 2 #" ("
0 0 14 3 6 #"letter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 6 #"letter"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 4 #"))) "
0 0 14 3 6 #"symbol"
0 0 24 3 5 #")    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"BSAT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 12 #"bsat-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #") "
0 0 14 3 10 #"numero-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"x16\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 13 #"numerohex-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"'\""
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 24 3 2 #") "
0 0 14 3 12 #"caracter-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"\\\"\""
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 24 3 2 #") "
0 0 14 3 10 #"cadena-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 13 #"identificador"
0 0 24 3 2 #") "
0 0 14 3 17 #"identificador-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"$\""
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 2 #") "
0 0 14 3 9 #"refid-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"var\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 3 #")  "
0 0 14 3 7 #"var-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"set\""
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"->\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 11 #"asignar-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"cons\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 3 #")  "
0 0 14 3 8 #"cons-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"rec\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 3 #")  "
0 0 19 3 4 #"\"in\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 7 #"rec-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"begin\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 24 3 2 #") "
0 0 15 3 9 #"begin-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"for\""
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 11 #"to-o-downto"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"do\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"done\""
0 0 24 3 2 #") "
0 0 14 3 7 #"for-exp"
0 0 24 3 5 #")    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 9 #"primitiva"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 8 #"prim-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"proc\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 8 #"proc-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"letrec\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 24 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 3 #")  "
0 0 19 3 4 #"\"in\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 10 #"letrec-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 10 #"\"imprimir\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 9 #"print-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"FNC\""
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 11 #"clausula-or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"and\""
0 0 24 3 1 #" "
0 0 14 3 11 #"clausula-or"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 7 #"fnc-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"if\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expr-bool"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"then\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"else\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 24 3 2 #") "
0 0 14 3 6 #"if-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"while\""
0 0 24 3 2 #") "
0 0 14 3 9 #"while-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expr-bool"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 11 #"comparacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expr-bool"
0 0 24 3 2 #" ("
0 0 14 3 13 #"oper-bin-bool"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expr-bool"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expr-bool"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 10 #"union-comp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expr-bool"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 24 3 2 #") "
0 0 14 3 8 #"bool-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expr-bool"
0 0 24 3 2 #" ("
0 0 14 3 12 #"oper-un-bool"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expr-bool"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 7 #"op-comp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;                  ::= while <expr-bool> do <expresion> done"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;                      <while-exp (expb exp)>"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"clausula-or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"or\""
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 3 #")) "
0 0 14 3 15 #"clausula-or-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"to-o-downto"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"to\""
0 0 24 3 2 #") "
0 0 14 3 2 #"to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"to-o-downto"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"downto\""
0 0 24 3 2 #") "
0 0 14 3 6 #"downto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"bool"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"true\""
0 0 24 3 2 #") "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"bool"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"false\""
0 0 24 3 2 #") "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 10 #"\"solveFNC\""
0 0 24 3 2 #") "
0 0 14 3 9 #"solve-fnc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"+\""
0 0 24 3 2 #") "
0 0 14 3 4 #"suma"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 24 3 2 #") "
0 0 14 3 5 #"resta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"*\""
0 0 24 3 2 #") "
0 0 14 3 4 #"mult"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"/\""
0 0 24 3 2 #") "
0 0 14 3 8 #"division"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"%\""
0 0 24 3 2 #") "
0 0 14 3 6 #"modulo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"add1\""
0 0 24 3 2 #") "
0 0 14 3 4 #"add1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"sub1\""
0 0 24 3 2 #") "
0 0 14 3 4 #"sub1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"+_16\""
0 0 24 3 2 #") "
0 0 14 3 6 #"suma16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"-_16\""
0 0 24 3 2 #") "
0 0 14 3 7 #"resta16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"*_16\""
0 0 24 3 2 #") "
0 0 14 3 6 #"mult16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"add1_16\""
0 0 24 3 2 #") "
0 0 14 3 7 #"add1_16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"sub1_16\""
0 0 24 3 2 #") "
0 0 14 3 7 #"sub1_16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"lenght\""
0 0 24 3 2 #") "
0 0 14 3 10 #"lenght-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"concat\""
0 0 24 3 2 #") "
0 0 14 3 10 #"concat-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"vacia\""
0 0 24 3 2 #") "
0 0 14 3 9 #"vacia-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 13 #"\"crear-lista\""
0 0 24 3 2 #") "
0 0 14 3 15 #"crear-lista-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"lista?\""
0 0 24 3 2 #") "
0 0 14 3 10 #"lista?-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"cabeza\""
0 0 24 3 2 #") "
0 0 14 3 10 #"cabeza-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"cola\""
0 0 24 3 2 #") "
0 0 14 3 8 #"cola-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"append\""
0 0 24 3 2 #") "
0 0 14 3 10 #"append-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"vector?\""
0 0 24 3 2 #") "
0 0 14 3 11 #"vector?-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 11 #"\"crear-vec\""
0 0 24 3 2 #") "
0 0 14 3 11 #"crear-v-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"ref-vec\""
0 0 24 3 2 #") "
0 0 14 3 11 #"ref-vec-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"set-vec\""
0 0 24 3 2 #") "
0 0 14 3 11 #"set-vec-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 12 #"\"registros?\""
0 0 24 3 1 #")"
0 0 14 3 14 #"registros?-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 11 #"\"crear-reg\""
0 0 24 3 2 #") "
0 0 14 3 13 #"crear-reg-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"ref-reg\""
0 0 24 3 2 #") "
0 0 14 3 11 #"ref-reg-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitiva"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"set-reg\""
0 0 24 3 2 #") "
0 0 14 3 11 #"set-reg-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"<\""
0 0 24 3 2 #") "
0 0 14 3 9 #"menor-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\">\""
0 0 24 3 2 #") "
0 0 14 3 9 #"mayor-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"<=\""
0 0 24 3 2 #") "
0 0 14 3 9 #"menor=exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\">=\""
0 0 24 3 2 #") "
0 0 14 3 9 #"mayor=exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"==\""
0 0 24 3 2 #") "
0 0 14 3 9 #"igual=exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"<>\""
0 0 24 3 2 #") "
0 0 14 3 13 #"diferente-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"oper-bin-bool"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"and\""
0 0 24 3 2 #") "
0 0 14 3 7 #"and-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"oper-bin-bool"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"or\""
0 0 24 3 2 #") "
0 0 14 3 6 #"or-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"oper-un-bool"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"not\""
0 0 24 3 2 #") "
0 0 14 3 7 #"not-exp"
0 0 24 3 5 #")    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;                  "
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;                  ::= <lista>"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                      <lista-exp (lista)>"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;                  ::= <vector>"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                      <vector-exp (vector)>"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;                  ::= <registro>"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;                      <registro-exp (registro)>"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;                  ::= <exp-bool>"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                  ::= <bool-exp (exp-bool)>"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;<lista>           ::= [{<expresion>}*(;)]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;                      <lista (lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;<vector>          ::= vector[{<expresion>}*(;)]"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;                      <vector (lexps)>"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;<registro>        ::= {{<identificador> = <expresion>}+(;)}"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      <registro (lids lexps)>"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 24 3 1 #" "
0 0 14 3 6 #"lexico"
0 0 24 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";(sllgen:list-define-datatypes lexico gramatica)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 24 3 1 #" "
0 0 14 3 6 #"lexico"
0 0 24 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100 5 0 0 24 29 1 #"\n"
0 0 17 3 63
#";;                      <rec-exp (lproc ids cuerpos cuerporec)>"
0 0 24 29 1 #"\n"
0 0 17 3 116
(11
 #";;(expresion (\"rec\" (arbno identificador \"(\" (separated-list ide"
 #"ntificador \",\") \")\" \"=\" expresion)  \"in\" expresion) "
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 10 #";;rec-exp)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
